// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flat

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type StopCommandT struct {
	ShutdownServer bool `json:"shutdown_server"`
}

func (t *StopCommandT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil {
		return 0
	}
	StopCommandStart(builder)
	StopCommandAddShutdownServer(builder, t.ShutdownServer)
	return StopCommandEnd(builder)
}

func (rcv *StopCommand) UnPackTo(t *StopCommandT) {
	t.ShutdownServer = rcv.ShutdownServer()
}

func (rcv *StopCommand) UnPack() *StopCommandT {
	if rcv == nil {
		return nil
	}
	t := &StopCommandT{}
	rcv.UnPackTo(t)
	return t
}

type StopCommand struct {
	_tab flatbuffers.Table
}

func GetRootAsStopCommand(buf []byte, offset flatbuffers.UOffsetT) *StopCommand {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &StopCommand{}
	x.Init(buf, n+offset)
	return x
}

func FinishStopCommandBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsStopCommand(buf []byte, offset flatbuffers.UOffsetT) *StopCommand {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &StopCommand{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedStopCommandBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *StopCommand) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *StopCommand) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *StopCommand) ShutdownServer() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *StopCommand) MutateShutdownServer(n bool) bool {
	return rcv._tab.MutateBoolSlot(4, n)
}

func StopCommandStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func StopCommandAddShutdownServer(builder *flatbuffers.Builder, shutdownServer bool) {
	builder.PrependBoolSlot(0, shutdownServer, false)
}
func StopCommandEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
