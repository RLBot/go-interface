// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flat

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// A psyonix bot, e.g. All Star bot
type PsyonixT struct {
	BotSkill PsyonixSkill `json:"bot_skill"`
}

func (t *PsyonixT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil {
		return 0
	}
	PsyonixStart(builder)
	PsyonixAddBotSkill(builder, t.BotSkill)
	return PsyonixEnd(builder)
}

func (rcv *Psyonix) UnPackTo(t *PsyonixT) {
	t.BotSkill = rcv.BotSkill()
}

func (rcv *Psyonix) UnPack() *PsyonixT {
	if rcv == nil {
		return nil
	}
	t := &PsyonixT{}
	rcv.UnPackTo(t)
	return t
}

type Psyonix struct {
	_tab flatbuffers.Table
}

func GetRootAsPsyonix(buf []byte, offset flatbuffers.UOffsetT) *Psyonix {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &Psyonix{}
	x.Init(buf, n+offset)
	return x
}

func FinishPsyonixBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsPsyonix(buf []byte, offset flatbuffers.UOffsetT) *Psyonix {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &Psyonix{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedPsyonixBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *Psyonix) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Psyonix) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *Psyonix) BotSkill() PsyonixSkill {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return PsyonixSkill(rcv._tab.GetByte(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *Psyonix) MutateBotSkill(n PsyonixSkill) bool {
	return rcv._tab.MutateByteSlot(4, byte(n))
}

func PsyonixStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func PsyonixAddBotSkill(builder *flatbuffers.Builder, botSkill PsyonixSkill) {
	builder.PrependByteSlot(0, byte(botSkill), 0)
}
func PsyonixEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
