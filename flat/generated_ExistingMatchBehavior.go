// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flat

import "strconv"

/// Possible behaviours when a match is started while another match is in progress.
type ExistingMatchBehavior byte

const (
	/// Always restart the match, even if config is identical.
	ExistingMatchBehaviorRestart            ExistingMatchBehavior = 0
	/// Never restart an existing match if possible, just try to remove or spawn cars to match the configuration.
	/// If we are not in the middle of a match, a match will be started. Handy for LAN matches.
	ExistingMatchBehaviorContinueAndSpawn   ExistingMatchBehavior = 1
	/// Restart the match if any match settings differ.
	/// No other otherwise.
	ExistingMatchBehaviorRestartIfDifferent ExistingMatchBehavior = 2
)

var EnumNamesExistingMatchBehavior = map[ExistingMatchBehavior]string{
	ExistingMatchBehaviorRestart:            "Restart",
	ExistingMatchBehaviorContinueAndSpawn:   "ContinueAndSpawn",
	ExistingMatchBehaviorRestartIfDifferent: "RestartIfDifferent",
}

var EnumValuesExistingMatchBehavior = map[string]ExistingMatchBehavior{
	"Restart":            ExistingMatchBehaviorRestart,
	"ContinueAndSpawn":   ExistingMatchBehaviorContinueAndSpawn,
	"RestartIfDifferent": ExistingMatchBehaviorRestartIfDifferent,
}

func (v ExistingMatchBehavior) String() string {
	if s, ok := EnumNamesExistingMatchBehavior[v]; ok {
		return s
	}
	return "ExistingMatchBehavior(" + strconv.FormatInt(int64(v), 10) + ")"
}
