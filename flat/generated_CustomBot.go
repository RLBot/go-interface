// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flat

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// A bot controlled by the RLBot framework.
type CustomBotT struct {
}

func (t *CustomBotT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil {
		return 0
	}
	CustomBotStart(builder)
	return CustomBotEnd(builder)
}

func (rcv *CustomBot) UnPackTo(t *CustomBotT) {
}

func (rcv *CustomBot) UnPack() *CustomBotT {
	if rcv == nil {
		return nil
	}
	t := &CustomBotT{}
	rcv.UnPackTo(t)
	return t
}

type CustomBot struct {
	_tab flatbuffers.Table
}

func GetRootAsCustomBot(buf []byte, offset flatbuffers.UOffsetT) *CustomBot {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &CustomBot{}
	x.Init(buf, n+offset)
	return x
}

func FinishCustomBotBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsCustomBot(buf []byte, offset flatbuffers.UOffsetT) *CustomBot {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &CustomBot{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedCustomBotBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *CustomBot) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *CustomBot) Table() flatbuffers.Table {
	return rcv._tab
}

func CustomBotStart(builder *flatbuffers.Builder) {
	builder.StartObject(0)
}
func CustomBotEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
